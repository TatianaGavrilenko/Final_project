{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\KG_realtor_app\\\\realtor-page\\\\src\\\\Components\\\\API.js\";\nimport React from 'react';\n\nclass API extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: true,\n      translation: '',\n      value: ''\n    };\n    this.wordsRef = Array(this.state.library.length);\n    this.getValue = this.getValue.bind(this);\n  }\n\n  async addWordToLibrary() {\n    try {\n      const response = await fetch(`https://realtor.p.rapidapi.com/properties/v2/list-for-sale?sort=relevance&limit=200&offset=0&city=${this.state.value}`, {\n        \"method\": \"GET\",\n        \"headers\": {\n          \"x-rapidapi-host\": \"realtor.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"f9871e9028mshc949b36dd6ede42p19eea8jsnfe9903109b31\"\n        }\n      });\n      const result = await response.json();\n\n      if (result.properties) {\n        await this.setState(() => ({\n          translation: result.properties\n        }));\n      }\n\n      await this.setState(() => ({\n        translation: ''\n      }));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getValue(event) {\n    const value = event.currentTarget.value;\n    this.setState(() => ({\n      value: value\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-word-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, this.state.isOpen ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"label-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, \"Add new word\") : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.getValue,\n      placeholder: \"Enter new word\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, this.state.translation), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addWordToLibrary,\n      className: \"btn-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }, \" \\u2713\")), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.changeMode,\n      className: this.state.isOpen ? 'btn-add' : 'btn-close',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"library-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"library-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, \"Word\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, \"Translation\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, \"Learn Level\")), this.state.library.map((word, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      ref: el => this.wordsRef[index] = el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, word.id), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, word.word), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, word.translation), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => this.removeWordFromLibrary(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, \"Delete\")))));\n  }\n\n}\n\nexport default API;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/KG_realtor_app/realtor-page/src/Components/API.js"],"names":["React","API","Component","constructor","props","state","isOpen","translation","value","wordsRef","Array","library","length","getValue","bind","addWordToLibrary","response","fetch","result","json","properties","setState","error","console","log","event","currentTarget","render","changeMode","map","word","index","el","id","removeWordFromLibrary"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nclass API extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isOpen: true,\r\n            translation: '',\r\n            value: ''\r\n        }\r\n        this.wordsRef = Array(this.state.library.length)\r\n        this.getValue = this.getValue.bind(this)\r\n    }\r\n\r\n    async addWordToLibrary() {\r\n        try {\r\n            const response = await fetch(`https://realtor.p.rapidapi.com/properties/v2/list-for-sale?sort=relevance&limit=200&offset=0&city=${this.state.value}`, {\r\n                \"method\": \"GET\",\r\n                \"headers\": {\r\n                    \"x-rapidapi-host\": \"realtor.p.rapidapi.com\",\r\n                    \"x-rapidapi-key\": \"f9871e9028mshc949b36dd6ede42p19eea8jsnfe9903109b31\"\r\n        }\r\n            })\r\n            const result = await response.json()\r\n\r\n            if (result.properties) {\r\n                await this.setState(()=> ({\r\n                    translation: result.properties\r\n                }))\r\n            }\r\n\r\n            await this.setState(()=> ({\r\n                translation: ''\r\n            }))\r\n        }\r\n        \r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n    }\r\n\r\n    async getValue(event){\r\n        const value = event.currentTarget.value\r\n        this.setState(()=> ({\r\n            value: value\r\n        }))\r\n           \r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"page-container\">\r\n                <div className=\"add-word-container\">\r\n                    {this.state.isOpen ? \r\n                        <span className=\"label-title\">Add new word</span> : \r\n                        <div>\r\n                            <input onChange={this.getValue} placeholder = \"Enter new word\"/>\r\n                            <span>{this.state.translation}</span>\r\n                            <button onClick={this.addWordToLibrary} className = \"btn-check\"> ✓</button>\r\n                        </div>\r\n                    }\r\n                    <button onClick ={this.changeMode} className = {this.state.isOpen ? 'btn-add': 'btn-close'}></button>\r\n                </div>\r\n                <div className='library-container'>\r\n                    <div className=\"library-header\">\r\n                        <div>Word</div>\r\n                        <div>Translation</div>\r\n                        <div>Learn Level</div>\r\n                    </div>\r\n                    {this.state.library.map((word, index) => (\r\n                        <div key={index}\r\n                        ref={el => this.wordsRef[index] = el}\r\n                        > \r\n                            <div>\r\n                                {word.id}\r\n                            </div>\r\n                            <div>\r\n                                {word.word}\r\n                            </div>\r\n                            <div>\r\n                                {word.translation}\r\n                            </div>\r\n                            <div onClick={() => this.removeWordFromLibrary(index)}>Delete</div>\r\n                        </div>\r\n                    ))}\r\n                   \r\n                </div>\r\n                {/*<button onClick={this.checkWord}>Check the word</button>*/}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default API"]},"metadata":{},"sourceType":"module"}